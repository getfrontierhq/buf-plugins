// Copyright 2024 Frontier Technologies Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DynamoDB annotations for generating Go struct tags.
//
// This package provides protobuf field options for annotating messages with
// DynamoDB-specific metadata. The protoc-gen-go-dynamo plugin reads these
// annotations and generates appropriate struct tags in the Go code.
//
// # Usage
//
// Import the annotations in your proto file:
//
//   import "dynamo/annotations.proto";
//
// Annotate your message fields:
//
//   message User {
//     string id = 1 [(dynamo.key) = {type: KEY_TYPE_HASH, column_name: "ID"}];
//     string email = 2 [
//       (dynamo.key) = {column_name: "email"},
//       (dynamo.gsi) = {name: "email-index", key: KEY_TYPE_HASH}
//     ];
//     int64 created_at = 3 [(dynamo.key) = {type: KEY_TYPE_RANGE}];
//   }
//
// The plugin generates Go code with struct tags:
//
//   type User struct {
//     Id        string `protobuf:"..." json:"..." dynamo:"ID,hash"`
//     Email     string `protobuf:"..." json:"..." dynamo:"email" index:"email-index,hash"`
//     CreatedAt int64  `protobuf:"..." json:"..." dynamo:",range"`
//   }
//
// # Annotations
//
// (dynamo.key) - Primary table key configuration
//   Use KeyConfig message to specify the key type and optional column name.
//   Examples:
//     [(dynamo.key) = {type: KEY_TYPE_HASH, column_name: "ID"}]
//     [(dynamo.key) = {type: KEY_TYPE_RANGE}]
//     [(dynamo.key) = {column_name: "email"}]  // No key type
//
// (dynamo.gsi) - Global Secondary Index (repeatable)
//   Use IndexConfig message to specify index name and key type.
//   Example: [(dynamo.gsi) = {name: "email-index", key: KEY_TYPE_HASH}]
//   Multiple GSIs: Use multiple (dynamo.gsi) annotations
//
// (dynamo.lsi) - Local Secondary Index (repeatable)
//   Same format as GSI.
//   Example: [(dynamo.lsi) = {name: "timestamp-index", key: KEY_TYPE_RANGE}]

syntax = "proto3";

package dynamo;

import "google/protobuf/descriptor.proto";

option go_package = "buf.build/gen/go/getfrontierhq/public-apis/protocolbuffers/go/dynamo";

// KeyType specifies the type of key in DynamoDB.
enum KeyType {
  // Unspecified key type.
  KEY_TYPE_UNSPECIFIED = 0;

  // Partition key (HASH key).
  KEY_TYPE_HASH = 1;

  // Sort key (RANGE key).
  KEY_TYPE_RANGE = 2;
}

// KeyConfig specifies the configuration for primary table keys.
message KeyConfig {
  // Key type (HASH or RANGE).
  KeyType type = 1;

  // Column name to use in the dynamo tag.
  // If empty, uses the field name.
  string column_name = 2;
}

// IndexConfig specifies the configuration for DynamoDB indexes.
message IndexConfig {
  // Index name (required).
  string name = 1;

  // Key type in this index (HASH or RANGE).
  KeyType key = 2;
}

extend google.protobuf.FieldOptions {
  // Primary table key annotation.
  KeyConfig key = 50000;

  // Global Secondary Index annotations (repeatable).
  repeated IndexConfig gsi = 50001;

  // Local Secondary Index annotations (repeatable).
  repeated IndexConfig lsi = 50002;
}
