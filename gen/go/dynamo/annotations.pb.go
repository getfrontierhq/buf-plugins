// Copyright 2024 Frontier Technologies Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DynamoDB annotations for generating Go struct tags.
//
// This package provides protobuf field options for annotating messages with
// DynamoDB-specific metadata. The protoc-gen-go-dynamo plugin reads these
// annotations and generates appropriate struct tags in the Go code.
//
// # Usage
//
// Import the annotations in your proto file:
//
//   import "dynamo/annotations.proto";
//
// Annotate your message fields:
//
//   message User {
//     string id = 1 [(dynamo.key) = {type: KEY_TYPE_HASH, column_name: "ID"}];
//     string email = 2 [
//       (dynamo.key) = {column_name: "email"},
//       (dynamo.gsi) = {name: "email-index", key: KEY_TYPE_HASH}
//     ];
//     int64 created_at = 3 [(dynamo.key) = {type: KEY_TYPE_RANGE}];
//   }
//
// The plugin generates Go code with struct tags:
//
//   type User struct {
//     Id        string `protobuf:"..." json:"..." dynamo:"ID,hash"`
//     Email     string `protobuf:"..." json:"..." dynamo:"email" index:"email-index,hash"`
//     CreatedAt int64  `protobuf:"..." json:"..." dynamo:",range"`
//   }
//
// # Annotations
//
// (dynamo.key) - Primary table key configuration
//   Use KeyConfig message to specify the key type and optional column name.
//   Examples:
//     [(dynamo.key) = {type: KEY_TYPE_HASH, column_name: "ID"}]
//     [(dynamo.key) = {type: KEY_TYPE_RANGE}]
//     [(dynamo.key) = {column_name: "email"}]  // No key type
//
// (dynamo.gsi) - Global Secondary Index (repeatable)
//   Use IndexConfig message to specify index name and key type.
//   Example: [(dynamo.gsi) = {name: "email-index", key: KEY_TYPE_HASH}]
//   Multiple GSIs: Use multiple (dynamo.gsi) annotations
//
// (dynamo.lsi) - Local Secondary Index (repeatable)
//   Same format as GSI.
//   Example: [(dynamo.lsi) = {name: "timestamp-index", key: KEY_TYPE_RANGE}]

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: dynamo/annotations.proto

package dynamo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KeyType specifies the type of key in DynamoDB.
type KeyType int32

const (
	// Unspecified key type.
	KeyType_KEY_TYPE_UNSPECIFIED KeyType = 0
	// Partition key (HASH key).
	KeyType_KEY_TYPE_HASH KeyType = 1
	// Sort key (RANGE key).
	KeyType_KEY_TYPE_RANGE KeyType = 2
)

// Enum value maps for KeyType.
var (
	KeyType_name = map[int32]string{
		0: "KEY_TYPE_UNSPECIFIED",
		1: "KEY_TYPE_HASH",
		2: "KEY_TYPE_RANGE",
	}
	KeyType_value = map[string]int32{
		"KEY_TYPE_UNSPECIFIED": 0,
		"KEY_TYPE_HASH":        1,
		"KEY_TYPE_RANGE":       2,
	}
)

func (x KeyType) Enum() *KeyType {
	p := new(KeyType)
	*p = x
	return p
}

func (x KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_dynamo_annotations_proto_enumTypes[0].Descriptor()
}

func (KeyType) Type() protoreflect.EnumType {
	return &file_dynamo_annotations_proto_enumTypes[0]
}

func (x KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyType.Descriptor instead.
func (KeyType) EnumDescriptor() ([]byte, []int) {
	return file_dynamo_annotations_proto_rawDescGZIP(), []int{0}
}

// KeyConfig specifies the configuration for primary table keys.
type KeyConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Key type (HASH or RANGE).
	Type KeyType `protobuf:"varint,1,opt,name=type,proto3,enum=dynamo.KeyType" json:"type,omitempty"`
	// Column name to use in the dynamo tag.
	// If empty, uses the field name.
	ColumnName    string `protobuf:"bytes,2,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyConfig) Reset() {
	*x = KeyConfig{}
	mi := &file_dynamo_annotations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyConfig) ProtoMessage() {}

func (x *KeyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_dynamo_annotations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyConfig.ProtoReflect.Descriptor instead.
func (*KeyConfig) Descriptor() ([]byte, []int) {
	return file_dynamo_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *KeyConfig) GetType() KeyType {
	if x != nil {
		return x.Type
	}
	return KeyType_KEY_TYPE_UNSPECIFIED
}

func (x *KeyConfig) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

// IndexConfig specifies the configuration for DynamoDB indexes.
type IndexConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Index name (required).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Key type in this index (HASH or RANGE).
	Key           KeyType `protobuf:"varint,2,opt,name=key,proto3,enum=dynamo.KeyType" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexConfig) Reset() {
	*x = IndexConfig{}
	mi := &file_dynamo_annotations_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexConfig) ProtoMessage() {}

func (x *IndexConfig) ProtoReflect() protoreflect.Message {
	mi := &file_dynamo_annotations_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexConfig.ProtoReflect.Descriptor instead.
func (*IndexConfig) Descriptor() ([]byte, []int) {
	return file_dynamo_annotations_proto_rawDescGZIP(), []int{1}
}

func (x *IndexConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexConfig) GetKey() KeyType {
	if x != nil {
		return x.Key
	}
	return KeyType_KEY_TYPE_UNSPECIFIED
}

var file_dynamo_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*KeyConfig)(nil),
		Field:         50000,
		Name:          "dynamo.key",
		Tag:           "bytes,50000,opt,name=key",
		Filename:      "dynamo/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]*IndexConfig)(nil),
		Field:         50001,
		Name:          "dynamo.gsi",
		Tag:           "bytes,50001,rep,name=gsi",
		Filename:      "dynamo/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]*IndexConfig)(nil),
		Field:         50002,
		Name:          "dynamo.lsi",
		Tag:           "bytes,50002,rep,name=lsi",
		Filename:      "dynamo/annotations.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// Primary table key annotation.
	//
	// optional dynamo.KeyConfig key = 50000;
	E_Key = &file_dynamo_annotations_proto_extTypes[0]
	// Global Secondary Index annotations (repeatable).
	//
	// repeated dynamo.IndexConfig gsi = 50001;
	E_Gsi = &file_dynamo_annotations_proto_extTypes[1]
	// Local Secondary Index annotations (repeatable).
	//
	// repeated dynamo.IndexConfig lsi = 50002;
	E_Lsi = &file_dynamo_annotations_proto_extTypes[2]
)

var File_dynamo_annotations_proto protoreflect.FileDescriptor

const file_dynamo_annotations_proto_rawDesc = "" +
	"\n" +
	"\x18dynamo/annotations.proto\x12\x06dynamo\x1a google/protobuf/descriptor.proto\"Q\n" +
	"\tKeyConfig\x12#\n" +
	"\x04type\x18\x01 \x01(\x0e2\x0f.dynamo.KeyTypeR\x04type\x12\x1f\n" +
	"\vcolumn_name\x18\x02 \x01(\tR\n" +
	"columnName\"D\n" +
	"\vIndexConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\x03key\x18\x02 \x01(\x0e2\x0f.dynamo.KeyTypeR\x03key*J\n" +
	"\aKeyType\x12\x18\n" +
	"\x14KEY_TYPE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rKEY_TYPE_HASH\x10\x01\x12\x12\n" +
	"\x0eKEY_TYPE_RANGE\x10\x02:D\n" +
	"\x03key\x12\x1d.google.protobuf.FieldOptions\x18І\x03 \x01(\v2\x11.dynamo.KeyConfigR\x03key:F\n" +
	"\x03gsi\x12\x1d.google.protobuf.FieldOptions\x18ц\x03 \x03(\v2\x13.dynamo.IndexConfigR\x03gsi:F\n" +
	"\x03lsi\x12\x1d.google.protobuf.FieldOptions\x18҆\x03 \x03(\v2\x13.dynamo.IndexConfigR\x03lsiB\x9c\x01\n" +
	"\n" +
	"com.dynamoB\x10AnnotationsProtoP\x01ZDbuf.build/gen/go/getfrontierhq/public-apis/protocolbuffers/go/dynamo\xa2\x02\x03DXX\xaa\x02\x06Dynamo\xca\x02\x06Dynamo\xe2\x02\x12Dynamo\\GPBMetadata\xea\x02\x06Dynamob\x06proto3"

var (
	file_dynamo_annotations_proto_rawDescOnce sync.Once
	file_dynamo_annotations_proto_rawDescData []byte
)

func file_dynamo_annotations_proto_rawDescGZIP() []byte {
	file_dynamo_annotations_proto_rawDescOnce.Do(func() {
		file_dynamo_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dynamo_annotations_proto_rawDesc), len(file_dynamo_annotations_proto_rawDesc)))
	})
	return file_dynamo_annotations_proto_rawDescData
}

var file_dynamo_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dynamo_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dynamo_annotations_proto_goTypes = []any{
	(KeyType)(0),                      // 0: dynamo.KeyType
	(*KeyConfig)(nil),                 // 1: dynamo.KeyConfig
	(*IndexConfig)(nil),               // 2: dynamo.IndexConfig
	(*descriptorpb.FieldOptions)(nil), // 3: google.protobuf.FieldOptions
}
var file_dynamo_annotations_proto_depIdxs = []int32{
	0, // 0: dynamo.KeyConfig.type:type_name -> dynamo.KeyType
	0, // 1: dynamo.IndexConfig.key:type_name -> dynamo.KeyType
	3, // 2: dynamo.key:extendee -> google.protobuf.FieldOptions
	3, // 3: dynamo.gsi:extendee -> google.protobuf.FieldOptions
	3, // 4: dynamo.lsi:extendee -> google.protobuf.FieldOptions
	1, // 5: dynamo.key:type_name -> dynamo.KeyConfig
	2, // 6: dynamo.gsi:type_name -> dynamo.IndexConfig
	2, // 7: dynamo.lsi:type_name -> dynamo.IndexConfig
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	5, // [5:8] is the sub-list for extension type_name
	2, // [2:5] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_dynamo_annotations_proto_init() }
func file_dynamo_annotations_proto_init() {
	if File_dynamo_annotations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dynamo_annotations_proto_rawDesc), len(file_dynamo_annotations_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_dynamo_annotations_proto_goTypes,
		DependencyIndexes: file_dynamo_annotations_proto_depIdxs,
		EnumInfos:         file_dynamo_annotations_proto_enumTypes,
		MessageInfos:      file_dynamo_annotations_proto_msgTypes,
		ExtensionInfos:    file_dynamo_annotations_proto_extTypes,
	}.Build()
	File_dynamo_annotations_proto = out.File
	file_dynamo_annotations_proto_goTypes = nil
	file_dynamo_annotations_proto_depIdxs = nil
}
